name: Nebari Deploy

on:
  workflow_dispatch:
    # TODO: Remove duplication of inputs from here and nebari/action.yml
    inputs:
      github-username:
        description: 'GitHub Username'
        required: true
        default: "aktech"
      domain:
        description: 'Nebari Domain'
        required: true
        default: "nebari.iamit.in"
      github-repository:
        description: 'GitHub Repository for Nebari Deployment'
        required: false
        default: "nebari-deployment"
      nebari-version:
        description: 'Nebari Version'
        required: false
        default: "2022.10.1"
      project-name:
        description: 'Nebari Project Name'
        required: false
        default: "nebarideploy"
      vendor:
        description: 'Cloud Provider'
        required: false
        default: "aws"
      ciprovider:
        description: 'CI/CD Provider'
        required: false
        default: "github-actions"

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Nebari
    steps:
      - uses: actions/checkout@v3
      - name: Set GitHub Secrets as Environment variables
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Create secrets file for GCP
        if: ${{ inputs.ciprovider }} == 'gcp'
        run:
          echo $GOOGLE_CREDENTIALS > /tmp/gcp.json
          echo "GOOGLE_CREDENTIALS=/tmp/gcp.json" >> $GITHUB_ENV

      - name: Set up gcloud Cloud SDK environment
        if: ${{ inputs.ciprovider }} == 'gcp'
        uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          export_default_credentials: true

      - name: Nebari Init and Deployment Trigger
        uses: ./.github/actions/nebari
        with:
          nebari-version: ${{ inputs.nebari-version }}
          project-name: ${{ inputs.project-name }}
          vendor: ${{ inputs.vendor }}
          github-repository: ${{ inputs.github-repository }}
          ciprovider: ${{ inputs.ciprovider }}
          domain: ${{ inputs.domain }}
          github-username: ${{ inputs.github-username }}
